#!/usr/bin/python3

import re
import sys
import numpy as np
import pandas as pd

# Read argument: either D-0.01 or D-0.10
exp_name = sys.argv[1]
defect = exp_name[2:]
pattern = r"-0\.125-" + re.escape(defect) + r"\.mpec"
# Read CSV file generated by table-generator
df = pd.read_csv("./csv/MPEC-" + exp_name + ".table.csv", sep="\t")
df = df.fillna(value=np.nan)
# Drop useless rows
df = df.drop([0, 1])
# Adjust circuit names
df = df.replace(regex=pattern, value="")
df = df.replace(regex=r"mem_ctrl", value="mem\_ctrl")
# Erase CPU time if the task is not done
df["ABC .1"][df["ABC "] != "done"] = np.nan
df["ABC .4"][df["ABC .3"] != "done"] = np.nan
df["DC-SSAT .1"][df["DC-SSAT "] != "done"] = np.nan
# Drop useless columns
df = df.drop(["ABC "], axis=1)
df = df.drop(["ABC .3"], axis=1)
df = df.drop(["DC-SSAT "], axis=1)
# Rename columns
df.columns = ["Circuit", "BSP-T", "BSP-P", "BSPnr-T", "BSPnr-P", "DC-T", "DC-P"]
# Drop all-empty rows
df = df.dropna(how="all", subset=df.columns[1:])
# Write out a parsed csv file
df.to_csv("./csv/parsed-MPEC-" + exp_name + ".csv", sep="\t", na_rep="nan", index=False)
